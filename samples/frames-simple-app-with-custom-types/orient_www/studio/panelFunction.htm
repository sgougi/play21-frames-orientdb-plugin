<div id="tab-functions" class="row-fluid">
	<div class="span2">
		<div class="row-fluid">
			<div class="span10">Stored functions in database:</div>
			<div class="span2">
				<a href="#" onclick='javascript:loadFunctions()'><i class="icon-refresh"></i></a>
			</div>
			<div class="span12">
				<select id="functions" multiple="multiple" style="border: 1px solid gray; width: 90%; height: 450px;"></select>
			</div>
		</div>
	</div>
	<div class="span10">
		<div class="row-fluid">
 			<div class="span6 btn-toolbar">
				<div class="btn-group">
					<button class="btn" onclick='javascript:newFunction()'>
						<img border="0" alt="New function" src="images/add.png" align="top" /> New
					</button>
					<button class="btn" onclick="javascript:deleteFunction()">
						<i class="icon-trash"></i> Delete
					</button>
				</div>
				<div class="btn-group">
					<button class="btn" onClick="javascript:funcCodeEditor.setCode('')">
						<img border="0" alt="Graph result" src="images/clear.png" align="top" /> Clear
					</button>
					<button class="btn" onClick="javascript:funcCodeEditor.reindent();">
						<img border="0" alt="Graph result" src="images/indent.png" align="top" /> Indent
					</button>
				</div>
				<div class="btn-group">
					<button onclick="javascript:saveFunction()" class="btn btn-primary">
						<i class="icon-ok"></i> Save
					</button>
				</div>
			</div>		
			<div class="span2">
				<label>Language</label><select id="funcLanguage" class="input-small">
					<option value='SQL'>SQL</option>
					<option value='Javascript'>Javascript</option>
				</select>
			</div>
			<div class="span3">
				<label>Name</label> <input id="funcName" value="" class="input"/>
			</div>
			<div class="span1">
				<label id="labelIdempotent" rel="tooltip" data-placement="left" data-original-title="Tells if the function is idempotent. Idempotent only functions can be executed using the HTTP GET method">Idempotent</label>
				<input id="funcIdempotent"  rel="tooltip" data-placement="left" data-original-title="Tells if the function is idempotent. Idempotent only functions can be executed using the HTTP GET method" type="checkbox"/>
			</div>
		</div>
		<div class="row-fluid">
			<label class="span2">Parameters:</label>
			<div id="funcParametersBox" class="span10">
				<span id="funcParameters"></span>
				<a id="funcParametersAdd" href="#" onclick="javascript:addParam()"><i class="icon-plus"></i></a>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span12" style="border: 1px solid gray;">
				<textarea id="funcCode" cols="120" rows="8" title="value">
                                  </textarea>
			</div>
		</div>
		<div class="row-fluid">
			<form id="funcExecution" class="form-inline span12">
				<label id="funcRuntimeName"></label> <label><h4>(</h4></label> <span id="funcRuntimeParameters"></span> <label><h4>)</h4></label>
				<a class="btn btn-success" onclick="javascript:executeFunction()"> <img border="0" alt="Execute" src="images/execute.png" /> Execute</a>
			</form>
		</div>
		<div class="row-fluid">
			<div class="span12" style="border: 1px solid gray; width: 100%;">
				<textarea id="funcOutput" cols="140" rows="6" title="value">
                                  </textarea>
			</div>
		</div>
	</div>
</div>

<script>
	funcCodeEditor = CodeMirror.fromTextArea('funcCode', {
		width : "auto",
		height : "230px",
		parserfile : [ "tokenizejavascript.js", "parsejavascript.js" ],
		stylesheet : "styles/codemirror/jscolors.css",
		path : "js/codemirror/",
		textWrapping : true,
		json : true
	});

	funcOutput = CodeMirror.fromTextArea('funcOutput', {
		width : "auto",
		height : "80px",
		parserfile : [ "tokenizejavascript.js", "parsejavascript.js" ],
		stylesheet : "styles/codemirror/jscolors.css",
		path : "js/codemirror/",
		textWrapping : true,
		json : true
	});

	function loadFunctions(){
		var funcClass = orientServer.getClass("OFunction");
		if( !funcClass ) {
			// NO FUNCTION INSTALLED
			$("#output").val("No functions module installed. Create a new function to activate it");
			return;
		}

		startTimer();
		
		var commandResult = orientServer.executeCommand("select from OFunction order by name");
	
		if (commandResult) {
			functions = commandResult.result;
			var snippet = "";
			for( row in functions ) {
				var funcName = functions[row].name;
				if( snippet.length > 0 )
					snippet += "<br/>";
				snippet += "<option id='funcLoad"+row+"' onclick='editFunction(\""+row+"\")' rel='tooltip' data-placement='left' data-original-title='Loads the function <b>" + funcName+"</b> in the editor'>"+funcName+"</option>";
			}
			$('#functions').html(snippet);
		}
		
		$("#output").val("Loaded " + functions.length +" functions in " + stopTimer() + " sec.");
	}
	
	function newFunction(){
		currentFunction = { '@class' : 'OFunction', language : 'Javascript', name : '', code : '' };
		viewFunction();
		funcOutput.setCode("");
	}
	
	function editFunction(row){
		currentFunction = functions[row];
		viewFunction();
	}
	
	function viewFunction(){		
		$('#funcLanguage').val( currentFunction['language'] );
		$('#funcName').val( currentFunction['name'] );
		//$('#funcRid').val( currentFunction['@rid'] );
		funcCodeEditor.setCode( currentFunction['code'] );
		$('#funcIdempotent').attr("checked", currentFunction['idempotent'] );

		viewParameters();
		updateRuntimeName();
	}
	
	function saveFunction() {
		currentFunction['language'] = $('#funcLanguage').val();
		currentFunction['name'] = $('#funcName').val();
		currentFunction['code'] = funcCodeEditor.getCode();
		currentFunction['idempotent'] = $('#funcIdempotent').is(':checked');

		var pars = [];
		for( i = 0; i < totalParameters; ++i )
			pars.push( $("#funcParam" + i).val() );
		
		currentFunction['parameters'] = pars;

		orientServer.save(currentFunction);
		loadFunctions();

		$("#output").val("Saved function '"+currentFunction['name']+"' as version " + currentFunction['@version']);

		for( f in functions ){
			if( currentFunction['name'] == functions[f].name ){
				currentFunction = functions[f];
				break;
			}
		}
	}
	
	function viewParameters(){
		totalParameters = 0;
		$('#funcParameters').html('');
		$('#funcRuntimeParameters').html('');
		var pars = currentFunction['parameters'];
		for( p in pars )
			addParam( pars[p] );
	}
	
	function addParam( name ){
		if( !name )
			name = '';
		
		$('#funcParameters').append('<input id="funcParam' + totalParameters + '" class="input-mini" value="' + name + '"/><a id="funcRemove' + totalParameters + '" onclick="delParam(' + totalParameters + ')"><i class="icon-trash"></a>');
		
		if( totalParameters > 0 )
			$('#funcRuntimeParameters').append(',&nbsp;');
		
		$('#funcRuntimeParameters').append('<input id="funcRuntimeParam' + totalParameters + '" class="input-mini" value=""/>');
		
		totalParameters++;
	}
	
	function delParam( id ){
		delete currentFunction['parameters'][id];
		viewParameters();
	}
	
	function updateRuntimeName(){
		$('#funcRuntimeName').html( '<h3>' + $('#funcName').val() + '</h3>');
	}
	
	function deleteFunction() {
		currentFunction['language'] = $('#funcLanguage').val();
		currentFunction['name'] = $('#funcName').val();
		currentFunction['code'] = funcCodeEditor.getCode();
		
		orientServer.remove(currentFunction);
		loadFunctions();
		
		$("#output").val("Deleted function '"+currentFunction['name']+"'");

		currentFunction = null;
		totalParameters = 0;
		newFunction();
	}
	
	function executeFunction(){
		var funcName = $('#funcName').val();
		$("#output").val("Executing server-side function '"+funcName+"'...");
		
		var pars = [];
		for( i = 0; i < totalParameters; ++i )
			pars.push( $("#funcRuntimeParam" + i).val() );
		
		startTimer();

		orientServer.setEvalResponse(false);
		var commandResult = orientServer.executeFunction(funcName, pars);
		orientServer.setEvalResponse(true);
		
		if( !orientServer.getErrorMessage() )
			$("#output").val("Server-side function '"+funcName+"' executed in " + stopTimer() + " sec.");

		if( !commandResult )
			commandResult = "";
		
		funcOutput.setCode(commandResult);
	}
	
	$('#funcName').bind('keyup input paste', function(event, previousText) {
		updateRuntimeName();
	});
	
	var functions;
	var currentFunction = null;
	var totalParameters = 0;

	loadFunctions();
	
	$(function() {
		initTooltips();
	});

	newFunction();
</script>